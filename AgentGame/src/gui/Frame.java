/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;


import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import logic.Facade;
/**
 *
 * @author s2-martyr
 */
public class Frame extends javax.swing.JFrame {
  Facade game = new Facade();
  boolean gameOver = false, move = true;
  ImageIcon pirate = new javax.swing.ImageIcon(getClass().getResource("/images/Pirates.png"));
  ImageIcon ninja = new javax.swing.ImageIcon(getClass().getResource("/images/Ninja.png"));
  
    /**
     * Creates new form AgentFrame
     */
  
    public Frame() {
        initComponents();   
        setLocation(100, 100);
        setSize(800, 700);
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    controlPanel = new javax.swing.JPanel();
    scorePanel = new javax.swing.JPanel();
    playerOne = new javax.swing.JLabel();
    scoreOne = new javax.swing.JLabel();
    playerTwo = new javax.swing.JLabel();
    scoreTwo = new javax.swing.JLabel();
    emptyPanel = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    newButtonPanel = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    newGame = new javax.swing.JButton();
    gamePanel = new javax.swing.JPanel();
    grid11 = new javax.swing.JLabel();
    grid12 = new javax.swing.JLabel();
    grid13 = new javax.swing.JLabel();
    grid21 = new javax.swing.JLabel();
    grid22 = new javax.swing.JLabel();
    grid23 = new javax.swing.JLabel();
    grid31 = new javax.swing.JLabel();
    grid32 = new javax.swing.JLabel();
    grid33 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Agent Frame");
    setMinimumSize(new java.awt.Dimension(600, 546));
    setPreferredSize(new java.awt.Dimension(600, 504));
    setResizable(false);

    controlPanel.setLayout(new java.awt.BorderLayout());

    scorePanel.setBackground(new java.awt.Color(143, 107, 57));
    scorePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scores:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(255, 255, 51))); // NOI18N
    scorePanel.setLayout(new java.awt.GridLayout(2, 2));

    playerOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Pirates.png"))); // NOI18N
    scorePanel.add(playerOne);

    scoreOne.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
    scoreOne.setForeground(new java.awt.Color(255, 255, 0));
    scoreOne.setText("0");
    scorePanel.add(scoreOne);

    playerTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ninja.png"))); // NOI18N
    scorePanel.add(playerTwo);

    scoreTwo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
    scoreTwo.setForeground(new java.awt.Color(255, 255, 0));
    scoreTwo.setText("0");
    scorePanel.add(scoreTwo);

    controlPanel.add(scorePanel, java.awt.BorderLayout.NORTH);

    emptyPanel.setBackground(new java.awt.Color(143, 107, 57));
    emptyPanel.setLayout(new java.awt.GridLayout());

    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/menu.png"))); // NOI18N
    emptyPanel.add(jLabel1);

    controlPanel.add(emptyPanel, java.awt.BorderLayout.CENTER);

    newButtonPanel.setBackground(new java.awt.Color(143, 107, 57));
    newButtonPanel.setForeground(new java.awt.Color(143, 107, 57));
    newButtonPanel.setLayout(new java.awt.GridLayout(3, 0));

    jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(255, 255, 0));
    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plan.png"))); // NOI18N
    jLabel2.setText("Plan:");
    newButtonPanel.add(jLabel2);
    newButtonPanel.add(jLabel3);

    newGame.setText("New Game");
    newGame.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        newGameMouseClicked(evt);
      }
    });
    newButtonPanel.add(newGame);

    controlPanel.add(newButtonPanel, java.awt.BorderLayout.SOUTH);

    getContentPane().add(controlPanel, java.awt.BorderLayout.EAST);

    gamePanel.setBackground(new java.awt.Color(143, 107, 57));
    gamePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    gamePanel.setLayout(new java.awt.GridLayout(3, 3));

    grid11.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid11.setText(" ");
    grid11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid11.setName("grid11"); // NOI18N
    grid11.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid11);

    grid12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid12.setText(" ");
    grid12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid12.setName("grid12"); // NOI18N
    grid12.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid12);

    grid13.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid13.setText(" ");
    grid13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid13.setName("grid13"); // NOI18N
    grid13.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid13);

    grid21.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid21.setText(" ");
    grid21.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid21.setName("grid21"); // NOI18N
    grid21.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid21);

    grid22.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid22.setText(" ");
    grid22.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid22.setName("grid22"); // NOI18N
    grid22.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid22);

    grid23.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid23.setText(" ");
    grid23.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid23.setName("grid23"); // NOI18N
    grid23.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid23);

    grid31.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid31.setText(" ");
    grid31.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid31.setName("grid31"); // NOI18N
    grid31.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid31);

    grid32.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid32.setText(" ");
    grid32.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid32.setName("grid32"); // NOI18N
    grid32.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid32);

    grid33.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    grid33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    grid33.setText(" ");
    grid33.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));
    grid33.setName("grid33"); // NOI18N
    grid33.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        grid11MouseClicked(evt);
      }
    });
    gamePanel.add(grid33);

    getContentPane().add(gamePanel, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void grid11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid11MouseClicked
      Component c = evt.getComponent();
      if (c instanceof JLabel){ //check we have a JLabel
        if( ((JLabel)c).getIcon() == null && gameOver != true && move == true){ // check the Jlabel is empty
          if(game.makeMove(((JLabel)c).getName())){
           // ((JLabel)c).setText("X");
            ((JLabel)c).setIcon(pirate);
          }
        }
        else
        {
          return;
        }
      }
      gameOver(move);
      if(gameOver != true){
         move = false;
         Thread t = new Thread(){
          @Override
          public void run() {
            try {
              sleep(2000);
              agentTurn();
              gameOver(move);
              move = true;
             } 
            catch (InterruptedException ex) {
              Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
          }
         };  
        t.start(); 
      }
    }//GEN-LAST:event_grid11MouseClicked

    private void agentTurn(){
      int[] location = new int[2];
            location = game.agentsMove();
      handleGridMouseClick(location[0], location[1]);
    }
    
    private void handleGridMouseClick( int row, int column )
    {       
      // perform the human move
      JLabel label = getLabel( row + 1, column + 1 );    
             //label.setText("O");
             label.setIcon(ninja);
             // fire the rules to see if game is over (won/drawn)
      }                 
    
    private JLabel getLabel(int row, int column){
      JLabel location = null;
      String match = "grid" + Integer.toString(row) + Integer.toString(column); 
      int length = gamePanel.getComponents().length;
      Component[] cells = new Component[length];
      cells = gamePanel.getComponents();
      for(int i = 0; i < length; i++){
       if(((JLabel)cells[i]).getName().equals(match)){
         location = ((JLabel)cells[i]);
       }
      }
      return location; 
    }
    
    private void newGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGameMouseClicked
     newGame();

    }//GEN-LAST:event_newGameMouseClicked

    private void newGame() {
     game.newGame();
     gameOver = false;
     int comps =  gamePanel.getComponents().length;
     for(int i = 0; i < comps; i++ )
     {
      Component toChange =  gamePanel.getComponent(i);
      ((JLabel)toChange).setText(" ");
      ((JLabel)toChange).setIcon(null);
     }
    }
    
    private void gameOver(boolean winner){
      int store;
      if(game.gameOver()){
        if(game.win()){
          if(winner){
            store = Integer.parseInt(scoreOne.getText());
            store++;
            scoreOne.setText(Integer.toString(store));
          }
          else
          {
            store = Integer.parseInt(scoreTwo.getText());
            store++;
            scoreTwo.setText(Integer.toString(store));
          }
        }
        gameOver = true;
      }
      else
      {
        gameOver = false;
      }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frame().setVisible(true);
                
            }
        });
    }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel controlPanel;
  private javax.swing.JPanel emptyPanel;
  private javax.swing.JPanel gamePanel;
  private javax.swing.JLabel grid11;
  private javax.swing.JLabel grid12;
  private javax.swing.JLabel grid13;
  private javax.swing.JLabel grid21;
  private javax.swing.JLabel grid22;
  private javax.swing.JLabel grid23;
  private javax.swing.JLabel grid31;
  private javax.swing.JLabel grid32;
  private javax.swing.JLabel grid33;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel newButtonPanel;
  private javax.swing.JButton newGame;
  private javax.swing.JLabel playerOne;
  private javax.swing.JLabel playerTwo;
  private javax.swing.JLabel scoreOne;
  private javax.swing.JPanel scorePanel;
  private javax.swing.JLabel scoreTwo;
  // End of variables declaration//GEN-END:variables
}
